# plot point 4
plot(t(raw[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 4",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(raw[8, 4:387]))
plot(t(topo[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(topo[8, 4:387]))
plot(t(brdf[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf[8, 4:387]))
plot(t(brdf.topo[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf.topo[8, 4:387]))
# set the windows
par(mfrow = c(4,4))
par(pty="s")
par(mar=c(1,4,1,1))
# plot point 1
plot(t(raw[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 1",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "RAW")
Axis(side = 1, at = seq(0, 1, by = .1), labels = FALSE)
Axis(side = 2, labels = FALSE)
# plot point 1
plot(t(raw[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 1",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "RAW")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
# plot point 1
plot(t(raw[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 1",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "RAW")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1))
# set the windows
par(mfrow = c(4,4))
par(pty="s")
par(mar=c(1,4,1,1))
# plot point 1
plot(t(raw[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 1",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "RAW")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[5, 4:387]))
# set the windows
par(mfrow = c(4,4))
par(pty="s")
par(mar=c(1,4,1,1))
# plot point 1
plot(t(raw[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 1",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "RAW")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[5, 4:387]))
plot(t(topo[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "TOPO")
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(topo[5, 4:387]))
plot(t(brdf[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "BRDF")
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf[5, 4:387]))
plot(t(brdf.topo[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "TOPO + BRDF")
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf.topo[5, 4:387]))
# plot point 2
plot(t(raw[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 2",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(raw[6, 4:387]))
plot(t(topo[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(topo[6, 4:387]))
plot(t(brdf[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf[6, 4:387]))
plot(t(brdf.topo[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf.topo[6, 4:387]))
# plot point 3
plot(t(raw[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 3",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(raw[7, 4:387]))
plot(t(topo[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(topo[7, 4:387]))
plot(t(brdf[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf[7, 4:387]))
plot(t(brdf.topo[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, labels = FALSE)
lines(t(brdf.topo[7, 4:387]))
# plot point 4
plot(t(raw[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 4",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1)
Axis(side = 2, labels = FALSE)
# load the needed libraries
library(raster)
library(rgdal)
library(rhdf5)
i <- 1
# lets loop through all the files in the directory
files.hsi <- list.files("D:/BRDF_TESTING/TALL_HDF5", full.names = TRUE)
# set the file to process
hsi.file <- files.hsi[i]
# lets read in the wavelength info
wavelengths <- h5read(file = hsi.file,
name = "/TALL/Reflectance/Metadata/Spectral_Data/Wavelength")
wavelengths
Axis(side = 1, at = seq(400, 2500, by = 250))
# plot point 4
plot(t(raw[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 4",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, at = seq(400, 2500, by = 250))
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[8, 4:387]))
# set the windows
par(mfrow = c(4,4))
par(pty="s")
par(mar=c(1,4,1,1))
# plot point 1
plot(t(raw[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 1",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "RAW")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[5, 4:387]))
plot(t(topo[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "TOPO")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(topo[5, 4:387]))
plot(t(brdf[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "BRDF")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf[5, 4:387]))
plot(t(brdf.topo[1, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE,
main = "TOPO + BRDF")
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf.topo[5, 4:387]))
# plot point 2
plot(t(raw[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 2",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[6, 4:387]))
plot(t(topo[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(topo[6, 4:387]))
plot(t(brdf[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf[6, 4:387]))
plot(t(brdf.topo[2, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf.topo[6, 4:387]))
# plot point 3
plot(t(raw[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 3",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[7, 4:387]))
plot(t(topo[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(topo[7, 4:387]))
plot(t(brdf[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf[7, 4:387]))
plot(t(brdf.topo[3, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf.topo[7, 4:387]))
# plot point 4
plot(t(raw[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "POINT 4",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(raw[8, 4:387]))
plot(t(topo[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(topo[8, 4:387]))
plot(t(brdf[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf[8, 4:387]))
plot(t(brdf.topo[4, 4:387]),
type = "l",
ylim = c(0,1),
ylab = "",
col = "blue",
axes = FALSE,
frame.plot = TRUE)
Axis(side = 1, labels = FALSE)
Axis(side = 2, at = seq(0, 1, by = .1), labels = FALSE)
lines(t(brdf.topo[8, 4:387]))
library(devtools)
library(roxygen2)
setwd("C:/Users/Aaron Kamoske/Dropbox/R_Packages_GitHub")
devtools::create("hypRspec")
devtools::document()
devtools::document()
setwd("C:/Users/Aaron Kamoske/Dropbox/R_Packages_GitHub/hypRspec")
devtools::document()
devtools::document()
# Install canopyLazR from GitHub
install_github("akamoske/hypRspec")
# Load the library
library(hypRspec)
?ndvi.mask
# lets loop through all the files in the directory
files.hsi <- list.files("D:/BRDF_TESTING/TALL_HDF5", full.names = TRUE)
files.hsi
ndvi.test <- ndvi.mask(hy.file = "D:/BRDF_TESTING/TALL_HDF5/NEON_D08_TALL_DP1_20180429_190316_reflectance.h5",
metadata.path = "/TALL/Reflectance/Reflectance_Data",
reflectance.path = "/TALL/Reflectance/Reflectance_Data",
wavelength.path = "/TALL/Reflectance/Metadata/Spectral_Data/Wavelength",
red.nm = 674,
nir.nm = 830,
ndvi.threshold = 0.5)
ndvi.test[500,]
devtools::document()
devtools::document()
# Install canopyLazR from GitHub
install_github("akamoske/hypRspec")
# Load the library
library(hypRspec)
?brightness.mask
# Calculate the brightness mask
brightness <- brightness.mask(hy.file = "D:/BRDF_TESTING/TALL_HDF5/NEON_D08_TALL_DP1_20180429_190316_reflectance.h5",
metadata.path = "/TALL/Reflectance/Reflectance_Data",
reflectance.path = "/TALL/Reflectance/Reflectance_Data",
wavelength.path = "/TALL/Reflectance/Metadata/Spectral_Data/Wavelength")
brightness[500,]
devtools::document()
# Install canopyLazR from GitHub
install_github("akamoske/hypRspec")
# Load the library
library(hypRspec)
?topo.correction
devtools::document()
# Install canopyLazR from GitHub
install_github("akamoske/hypRspec")
# Apply the topographic correction
topo <- topo.correction(hy.file = "D:/BRDF_TESTING/TALL_HDF5/NEON_D08_TALL_DP1_20180429_190316_reflectance.h5",
ndvi.mask = ndvi,
metadata.path = "/TALL/Reflectance/Reflectance_Data",
reflectance.path = "/TALL/Reflectance/Reflectance_Data",
wavelength.path = "/TALL/Reflectance/Metadata/Spectral_Data/Wavelength",
solar.az.path = "/TALL/Reflectance/Metadata/Logs/Solar_Azimuth_Angle",
solar.zn.path = "/TALL/Reflectance/Metadata/Logs/Solar_Zenith_Angle",
slope.path = "/TALL/Reflectance/Metadata/Ancillary_Imagery/Slope",
aspect.path = "/TALL/Reflectance/Metadata/Ancillary_Imagery/Aspect",
band.combo = c(25:194, 215:284, 325:403))
View(ndvi.test)
View(ndvi.test)
rm(ndvi.test)
# Calculate the NDVI mask
ndvi <- ndvi.mask(hy.file = "D:/BRDF_TESTING/TALL_HDF5/NEON_D08_TALL_DP1_20180429_190316_reflectance.h5",
metadata.path = "/TALL/Reflectance/Reflectance_Data",
reflectance.path = "/TALL/Reflectance/Reflectance_Data",
wavelength.path = "/TALL/Reflectance/Metadata/Spectral_Data/Wavelength",
red.nm = 674,
nir.nm = 830,
ndvi.threshold = 0.5)
# Apply the topographic correction
topo <- topo.correction(hy.file = "D:/BRDF_TESTING/TALL_HDF5/NEON_D08_TALL_DP1_20180429_190316_reflectance.h5",
ndvi.mask = ndvi,
metadata.path = "/TALL/Reflectance/Reflectance_Data",
reflectance.path = "/TALL/Reflectance/Reflectance_Data",
wavelength.path = "/TALL/Reflectance/Metadata/Spectral_Data/Wavelength",
solar.az.path = "/TALL/Reflectance/Metadata/Logs/Solar_Azimuth_Angle",
solar.zn.path = "/TALL/Reflectance/Metadata/Logs/Solar_Zenith_Angle",
slope.path = "/TALL/Reflectance/Metadata/Ancillary_Imagery/Slope",
aspect.path = "/TALL/Reflectance/Metadata/Ancillary_Imagery/Aspect",
band.combo = c(25:194, 215:284, 325:403))
